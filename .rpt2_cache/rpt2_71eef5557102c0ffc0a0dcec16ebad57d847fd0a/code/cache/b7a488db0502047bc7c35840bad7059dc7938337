{"code":"import select from './select';\r\nimport axios from 'axios';\r\nconst qs = require('qs');\r\nfunction sql(dbName) {\r\n    this.url = `/v1/sql?db=${dbName}`;\r\n    this.sql = {\r\n        where: '',\r\n    };\r\n    this.runSQL = async function (sql) {\r\n        let res = await axios.post(this.url, qs.stringify({\r\n            sql,\r\n        }));\r\n        return await res;\r\n    };\r\n    this.formatResult = function (res, type = 'all') {\r\n        if (res.data.code) {\r\n            throw new Error(res.data.error);\r\n        }\r\n        if (res.data.output) {\r\n            switch (type) {\r\n                case 'all':\r\n                    return {\r\n                        schema: res.data.output[0].records.schema.column_schemas,\r\n                        rows: res.data.output[0].records.rows,\r\n                    };\r\n                case 'one':\r\n                    return res.data.output[0].records.rows[0][0];\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            return res.data;\r\n        }\r\n    };\r\n    Object.entries(select).forEach(([key, value]) => {\r\n        this[key] = value;\r\n    });\r\n    this.tableDesc = async (table) => {\r\n        let res = await this.runSQL(`DESC TABLE ${table}`);\r\n        return this.formatResult(res);\r\n    };\r\n    this.getTimeIndex = async (table) => {\r\n        let res = await this.tableDesc(table);\r\n        return res.rows.find((row) => row[4] === 'TIME INDEX')[0];\r\n    };\r\n}\r\nexport default sql;\r\n","dts":{"name":"/Users/nemo/demo/greptime-js-sdk/.rpt2_cache/placeholder/sql.d.ts","writeByteOrderMark":false,"text":"declare function sql(dbName: any): void;\r\nexport default sql;\r\n"}}
